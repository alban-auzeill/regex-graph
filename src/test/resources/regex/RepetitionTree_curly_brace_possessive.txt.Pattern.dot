digraph G {
  rankdir=LR;
  graph [fontname="Monospace", fontsize="11"]

  // default nodes
  node [fontname="Monospace", fontsize="9", shape="box", style="rounded,filled", color="LightGray", fillcolor="Beige"]
  1[ label="Pattern:1\{\l  .pattern: \"(a|b)\{7\}+c\"\l  .flags: 0\l  .flags0: 0\l  .compiled: true\l  .normalizedPattern: \"(a|b)\{7\}+c\"\l  .buffer: null\l  .predicate: null\l  .namedGroups: null\l  .groupNodes: null\l  .topClosureNodes: null\l  .localTCNCount: 0\l  .hasGroupRef: false\l  .temp: null\l  .capturingGroupCount: 2\l  .localCount: 1\l  .cursor: 10\l  .patternLength: 0\l  .hasSupplementary: false\l\}\l" ]
  2[ label="Start:2\{\l  .minLength: 8\l\}\l" ]
  3[ label="Curly:3\{\l  .type: POSSESSIVE\l  .cmin: 7\l  .cmax: 7\l\}\l" ]
  4[ label="BmpCharProperty:4\{\l  .predicate:\l    $Lambda:7\{\l      .arg$1: 'c'\l    \}\l\}\l" ]
  5[ label="LastNode:5\{\l\}\l" ]
  6[ label="Node:6\{\l  .next: null\l\}\l" ]
  8[ label="GroupHead:8\{\l  .localIndex: 0\l\}\l" ]
  9[ label="Branch:9\{\l  .size: 2\l\}\l" ]
  11[ label="BmpCharProperty:11\{\l  .predicate:\l    $Lambda:14\{\l      .arg$1: 'a'\l    \}\l\}\l" ]
  12[ label="BranchConn:12\{\l\}\l" ]
  13[ label="GroupTail:13\{\l  .localIndex: 0\l  .groupIndex: 2\l\}\l" ]
  15[ label="BmpCharProperty:15\{\l  .predicate:\l    $Lambda:16\{\l      .arg$1: 'b'\l    \}\l\}\l" ]

  // default edges
  edge [fontname="Monospace", fontsize="9", color="Navy"]
  5 -> 6 [ label="",  taillabel="next" ]
  4 -> 5 [ label="",  taillabel="next" ]
  3 -> 4 [ label="",  taillabel="next" ]
  9 -> 6 [ label="",  taillabel="next" ]
  13 -> 6 [ label="",  taillabel="next" ]
  12 -> 13 [ label="",  taillabel="next" ]
  11 -> 12 [ label="",  taillabel="next" ]
  9 -> 11 [ label="",  taillabel="atoms[0]" ]
  15 -> 12 [ label="",  taillabel="next" ]
  9 -> 15 [ label="",  taillabel="atoms[1]" ]
  9 -> 12 [ label="",  taillabel="conn" ]
  8 -> 9 [ label="",  taillabel="next" ]
  8 -> 13 [ label="",  taillabel="tail" ]
  3 -> 8 [ label="",  taillabel="atom" ]
  2 -> 3 [ label="",  taillabel="next" ]
  1 -> 2 [ label="",  taillabel="root" ]
  1 -> 3 [ label="",  taillabel="matchRoot" ]
}
