digraph G {
  rankdir=LR;
  graph [fontname="Monospace", fontsize="11", pad="0.3"]

  // tree-and-state nodes
  node [fontname="Monospace", fontsize= "9", shape="box", style="rounded,filled", color="Blue", fillcolor="Beige", fixedsize="false", width="0.75"]
  1[ label="CapturingGroupTree:1\{\l  .range: \{0, 9, \"(?<foo>a)\"\}\l  .kind: CAPTURING_GROUP\l  .groupHeader: \{0, 7, \"(?<foo>\"\}\l  .name: \"foo\"\l  .groupNumber: 1\l\}\l" ]
  2[ label="PlainCharacterTree:2\{\l  .range: \{7, 8, \"a\"\}\l  .contents: \{'a'\}\l\}\l" ]

  // end nodes
  node [fontname="Monospace", fontsize= "9", shape="doublecircle", style="rounded,filled", color="#7070E0", fillcolor="#7070E0", fixedsize="true", width="0.12"]
  EndOfRegex[ label="EndOfRegex\l\l\l\l" ]

  // start nodes
  node [fontname="Monospace", fontsize= "9", shape="circle", style="rounded,filled", color="#7070E0", fillcolor="#7070E0", fixedsize="true", width="0.20"]
  StartState[ label="StartState\l\l\l\l" ]

  // default edges
  edge [fontname="Monospace", fontsize="9", style="solid", color="SlateGray", fontcolor="DarkSlateGray", arrowhead="vee", arrowtail="none", dir="both"]
  1 -> 2 [ label="",  taillabel="element" ]

  // successor edges
  edge [fontname="Monospace", fontsize="9", style="bold", color="DodgerBlue", fontcolor="MediumBlue", arrowhead="vee", arrowtail="none", dir="both"]
  1 -> 2 [ label="",  taillabel="" ]
  2 -> EndOfRegex [ label="",  taillabel="" ]
  StartState -> 1 [ label="",  taillabel="" ]

  // continuation edges
  edge [fontname="Monospace", fontsize="9", style="dashed", color="DodgerBlue", fontcolor="MediumBlue", arrowhead="vee", arrowtail="none", dir="both"]
  1 -> EndOfRegex [ label="",  taillabel="" ]
  2 -> EndOfRegex [ label="",  taillabel="" ]
  StartState -> 1 [ label="",  taillabel="" ]
}
