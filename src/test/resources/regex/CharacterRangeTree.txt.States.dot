digraph G {
  rankdir=LR;
  graph [fontname="Monospace", fontsize="13", pad="0.3"]
  labelloc="t";
  label="\"[a-d]\" States";

  // tree-and-state nodes
  node [fontname="Monospace", fontsize= "9", shape="box", style="rounded,filled", color="Blue", fillcolor="Beige", fixedsize="false", width="0.75"]
  1[ label="CharacterClassTree:1\{\l  .range: \{0, 5, \"[a-d]\"\}\l  .openingBracket: \{'['\}\l  .negated: false\l\}\l" ]

  // end nodes
  node [fontname="Monospace", fontsize= "9", shape="doublecircle", style="rounded,filled", color="#7070E0", fillcolor="#7070E0", fixedsize="true", width="0.12"]
  EndOfRegex[ label="EndOfRegex\l\l\l\l" ]

  // start nodes
  node [fontname="Monospace", fontsize= "9", shape="circle", style="rounded,filled", color="#7070E0", fillcolor="#7070E0", fixedsize="true", width="0.20"]
  StartState[ label="StartState\l\l\l\l" ]

  // successor edges
  edge [fontname="Monospace", fontsize="9", style="bold", color="DodgerBlue", fontcolor="MediumBlue", arrowhead="vee", arrowtail="none", dir="both"]
  1 -> EndOfRegex [ label="",  taillabel="" ]
  StartState -> 1 [ label="",  taillabel="" ]

  // continuation edges
  edge [fontname="Monospace", fontsize="9", style="dashed", color="DodgerBlue", fontcolor="MediumBlue", arrowhead="vee", arrowtail="none", dir="both"]
  1 -> EndOfRegex [ label="",  taillabel="" ]
  StartState -> 1 [ label="",  taillabel="" ]
}
